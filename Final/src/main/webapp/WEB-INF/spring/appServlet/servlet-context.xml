<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<interceptors>
		<interceptor>
			<!-- 인터셉터 처리되는 URL 매핑 -->
			<mapping path="/seller/**" />
			<!-- 위 url로 요청이 들어오면 seller로 보내겠다 -->
			<!-- 인터셉터 제외 URL 매핑 -->
			<exclude-mapping path="/seller/main" />
			<exclude-mapping path="/seller/login" />
			<!-- 인터셉터 빈 등록 -->
			<beans:bean class="web.interceptor.SellerInterceptor" />
		</interceptor>
	</interceptors>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
<!-- 	<resources mapping="/resources/**" location="/resources/" /> -->
	<resources mapping="/img/**" location="/resources/image/" />
	
	<!-- websocket handler -->
	<beans:bean id="replyEchochoHandler" class="web.handler.ReplyEchoHandler" />

	<websocket:handlers>
		<websocket:mapping handler="replyEchochoHandler" path="/replyEcho" />
		<websocket:handshake-interceptors>
		<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>	
	</websocket:handlers>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>
	
	<!-- UI 레이아웃 구성 설정 파일 -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles/template.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	
	<!-- URL 기반의 ViewResolver -->
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<!-- 스프링 빈 기반의 ViewResolver -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0" />
	</beans:bean>
	
	<!-- JSON응답을 위한 jsonView 빈 등록 -->
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<beans:property name="contentType" value="application/json;charset=utf-8"></beans:property>
	</beans:bean>
	
	<!-- 파일 요청파라미터 처리 리졸버 -->
	<beans:bean id="multipartResolver"
	 class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760" /> <!-- 10MB -->
		<beans:property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->
	</beans:bean>
	
	<context:component-scan base-package="com.spring.www, web" />
	
	
	
</beans:beans>
